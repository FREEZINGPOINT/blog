package com.breakpoint.dao;

import com.breakpoint.dto.BlogTopicDto;
import com.breakpoint.dto.PageInfo;
import com.breakpoint.dto.StatisticTopicBean;
import com.breakpoint.dto.TopicTypeDto;
import com.breakpoint.entity.BlogTopic;
import com.breakpoint.entity.BlogTopicExample;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface BlogTopicMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_topic
     *
     * @mbg.generated
     */
    long countByExample(BlogTopicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_topic
     *
     * @mbg.generated
     */
    int deleteByExample(BlogTopicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_topic
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_topic
     *
     * @mbg.generated
     */
    int insert(BlogTopic record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_topic
     *
     * @mbg.generated
     */
    int insertSelective(BlogTopic record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_topic
     *
     * @mbg.generated
     */
    List<BlogTopic> selectByExampleWithBLOBs(BlogTopicExample example);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_topic
     *
     * @mbg.generated
     */
    List<BlogTopic> selectByExample(BlogTopicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_topic
     *
     * @mbg.generated
     */
    BlogTopic selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_topic
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") BlogTopic record, @Param("example") BlogTopicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_topic
     *
     * @mbg.generated
     */
    int updateByExampleWithBLOBs(@Param("record") BlogTopic record, @Param("example") BlogTopicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_topic
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") BlogTopic record, @Param("example") BlogTopicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_topic
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(BlogTopic record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_topic
     *
     * @mbg.generated
     */
    int updateByPrimaryKeyWithBLOBs(BlogTopic record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_topic
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(BlogTopic record);


    /**
     * 自定义
     *
     * @return
     */
    BlogTopic selectByTopicId(@Param("topicId") long topicId);

    /*    */
    BlogTopicDto selectDtoByTopicId(@Param("topicId") long topicId);

    /**
     * 查询下一个
     *
     * @param blogTopic
     * @return
     */
    BlogTopicDto selectNextTopic(@Param("blogTopic") BlogTopicDto blogTopic);

    /**
     * 查询上虞个
     *
     * @param blogTopic
     * @return
     */
    BlogTopicDto selectPreTopic(@Param("blogTopic") BlogTopicDto blogTopic);


    /**
     * 自己加的方法
     * @param pageStart
     * @param pageSize
     * @param userId
     * @param topicType
     * @return
     */
    List<BlogTopic> selectTopicByPageInfo(@Param("pageStart") int pageStart, @Param("pageSize") int pageSize,
                                          @Param("userId") Long userId, @Param("topicType") String topicType,
                                          @Param("notTopicType") String notTopicType);

    List<BlogTopic> selectTopicByPageInfoListPage(@Param("pageInfo") PageInfo pageInfo,
                                          @Param("userId") Long userId, @Param("topicType") String topicType,
                                          @Param("notTopicType") String notTopicType);

    int countTopicByPageInfo(@Param("userId") Long userId, @Param("topicType") String topicType,
                             @Param("notTopicType") String notTopicType);


    List<BlogTopic> getTop3Topic();


    List<TopicTypeDto> getAllTopicType();


    List<String> selectTopicType();

    int selectTopicCount();

    List<StatisticTopicBean> selectTopicCountByType();
}